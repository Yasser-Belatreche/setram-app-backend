// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id String @id
  email String @unique
  password String
  createdAt DateTime @default(now())
}

model Employee {
  id String @id
  firstName String
  lastName String
  department String
  gender String
  birthDate DateTime
  startingDate DateTime
  phoneNumber String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  notifications Notification[]
  devices DeviceToken[]
  employeePlanning EmployeePlanning?
}

model DeviceToken {
  imeiNo String @id @unique
  token String
  deviceName String
  employeeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  employee Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Notification {
  id String @id
  title String
  body String
  read Boolean
  employeeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  employee Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model EmployeePlanning {
  employeeId String @id @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  workTimes WorkTime[]
  employee Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model WorkTime {
  id String @id @default(cuid())
  employeeId String
  label String
  day String
  startHour Int
  endHour Int
  startMinute Int
  endMinute Int
  createdAt DateTime @default(now())

  planning EmployeePlanning @relation(fields: [employeeId], references: [employeeId], onDelete: Cascade)
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

model Document {
  id String @id
  title String
  description String
  departments String[]
  link String
  documentPath String
  documentOriginName String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Announcement {
  id String @id
  title String
  description String
  departments String[]
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Event {
  id String @id
  title String
  description String
  departments String[]
  eventDate DateTime
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model JobPost {
  id String @id
  title String
  description String
  departments String[]
  location String
  salary String
  experience String
  education String
  skills String[]
  benefits String[]
  contact String
  applicationDeadline DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Workshop {
  id String @id
  title String
  description String
  departments String[]
  workshopDate DateTime
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

